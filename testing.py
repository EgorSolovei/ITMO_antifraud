# -*- coding: utf-8 -*-
"""testing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xM3gS4M81zZLxLa1nV7nYGRqtqMK-SWX

# Выводы

Количество
- клиентов: 4869
- стран: 12
- категорий продавцов: 8
- типов продавцов: 17
- продавцов: 105, 39 из которых имеют статус высокого риска
- типы карт: 5 - ['Platinum Credit', 'Premium Debit', 'Basic Debit', 'Gold Credit', 'Basic Credit']

Операции
- 20% операций - мошеннические
- Больше всего мошеннических операций у продавцов типа: online - 18.6% и physical 12.5% от всех мошеннических операций
- По типам карт, vendor_category - количество мошеннических операций распределено равномерно
- Практические все клиенты имеют 1 карту, 129 клиентов имеют 2 карты и только 1 клиент имеет 3 карты
- Мошеннические и легальные операции имеют одинаковый характер распределения (в USD), однако мошеннические имеют более тяжелый хвост
"""

import numpy as np
import pandas as pd
import plotly.express as px

path_1= "path_to_currency"
hist_exchange = pd.read_parquet(path_1)
hist_exchange.head()

long_df_currency = pd.melt(hist_exchange, id_vars=["date"], var_name="currency", value_name="value")
long_df_currency["date"] = pd.to_datetime(long_df_currency["date"])
long_df_currency.head()

path_transaction = "path_to_transaction.parquet"
transact = pd.read_parquet(path_transaction)
transact.head()

transact["channel"].unique(), transact["device"].unique()

transact.shape

transact.columns

transact["time_hour"] = transact["timestamp"].dt.floor("h")
transact["date"] = transact["time_hour"].dt.floor("d")
transact = pd.merge(transact, long_df_currency, how="left", on=["date", "currency"])
transact["amount_USD"] = transact["amount"] / transact["value"]
transact.head()

transact[transact["is_high_risk_vendor"] == True]["vendor"].nunique()

transact["customer_id"].nunique(), transact["country"].nunique(), transact["vendor_type"].nunique(), transact["vendor"].nunique()

fraud_orepation = 1494719
transact["is_fraud"].value_counts()

transact["vendor_category"].unique(), transact["vendor_type"].unique()

# количество карт у одного пользователя
transact.groupby(["customer_id"])["card_number"].nunique().value_counts()

px.histogram(transact["amount_USD"], color=transact["is_fraud"])

px.histogram(transact["amount_USD"], color=transact["vendor_category"])

(transact[transact["is_fraud"] == True].groupby("vendor_type")
            ["is_fraud"].count() / fraud_orepation).sort_values(ascending=False)

(transact[transact["is_fraud"] == True].groupby("vendor")
            ["is_fraud"].count() / fraud_orepation).sort_values(ascending=False).head(20)

(transact[transact["is_fraud"] == True].groupby("card_type")
            ["is_fraud"].count() / fraud_orepation).sort_values(ascending=False)

